<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zs.mapper.CommentMapper">

    <resultMap id="commentMap" type="Comment">
        <id column="com_id" property="comId"/>
        <result column="nickname" property="nickname"/>
        <result column="mail" property="mail"/>
        <result column="content" property="content"/>
        <result column="avatar" property="avatar"/>
        <result column="com_parent_id" property="comParentId"/>
        <result column="reply_time" property="replyTime"/>
        <result column="is_pass" property="isPass"/>
        <result column="pass_content" property="passContent"/>
    </resultMap>

    <sql id="commentColumn">
        com_id,nickname,mail,content,avatar,com_parent_id,bid,reply_time,is_pass,pass_content
    </sql>

    <insert id="insert">
        insert into tb_comment (com_id, nickname, mail, content, avatar, com_parent_id, bid, reply_time, is_pass)
        values (null, #{comment.nickname}, #{comment.mail}, #{comment.content}, #{comment.avatar}, #{comment.comParentId}, #{comment.bid}, #{comment.replyTime},1)
    </insert>

    <select id="listCommentsByBid" resultMap="commentMap">
        select com_id,nickname,mail,content,avatar,com_parent_id,bid,reply_time,is_pass,pass_content
        from tb_comment
        where bid = #{bid} and com_parent_id = -1
        order by reply_time desc
    </select>

    <select id="listCommentsByComId" resultMap="commentMap">
        select com_id,nickname,mail,content,avatar,com_parent_id,bid,reply_time,is_pass,pass_content
        from tb_comment
        where com_parent_id = #{comId}
        order by reply_time desc
    </select>

    <select id="listCommentsByCondition" resultMap="commentMap">
        select com_id,nickname,mail,content,avatar,com_parent_id,bid,reply_time,is_pass,pass_content
        from tb_comment
        <where>
            <if test="comment.bid != null and comment.bid != ''">and bid = #{comment.bid}</if>
            <if test="comment.content != null and comment.content != ''">and nickname like '%${comment.content}%' or mail like '%${comment.content}%' or content like '%${comment.content}%' </if>
            <if test="date.beginDate != null and date.beginDate != ''">and reply_time &gt;= #{date.beginDate} </if>
            <if test="date.endDate != null and date.endDate != ''">and reply_time &lt;= #{date.endDate} </if>
            <if test="comment.isPass != null">and is_pass = #{comment.isPass}</if>
        </where>
        order by reply_time desc
    </select>

    <select id="getCommentByCondition" resultMap="commentMap">
        select <include refid="commentColumn"/>
        from tb_comment
        <where>
            <if test="comment.comId != null">and com_id = #{comment.comId}</if>
        </where>
    </select>

    <select id="listCommentsByComIds" resultMap="commentMap">
        select <include refid="commentColumn"/>
        from tb_comment
        where com_id in
        <foreach collection="list" item="comIds" separator="," open="(" close=")">
            #{comIds}
        </foreach>
    </select>

    <delete id="deleteCommentByComIds">
        delete from tb_comment where com_id in
        <foreach collection="list" item="comIds" separator="," open="(" close=")">
            #{comIds}
        </foreach>
    </delete>

    <update id="updateCommentByComIds">
        update tb_comment
        <set>
            <if test="comment.content != null and comment.content !=''"> content = #{comment.content}, </if>
            <if test="comment.isPass == true"> is_pass = 1, </if>
            <if test="comment.isPass == true"> pass_content = '', </if>
            <if test="comment.isPass != true"> is_pass = 0, </if>
            <if test="comment.isPass != true"> pass_content = #{comment.passContent}, </if>
        </set>
        where com_id in
        <foreach collection="list" item="comIds" separator="," open="(" close=")">
            #{comIds}
        </foreach>
    </update>

    <delete id="deleteCommentByBid">
        delete from tb_comment where bid = #{bid}
    </delete>

</mapper>