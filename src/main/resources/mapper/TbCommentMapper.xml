<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zs.mapper.TbCommentMapper">

    <resultMap id="commentVO" type="com.zs.vo.CommentVO">
        <id column="id" property="id"/>
        <result column="send_id" property="sendId"/>
        <result column="receive_id" property="receiveId"/>
        <result column="msg_tag" property="msgTag"/>
        <result column="writer_name" property="name"/>
        <result column="writer_sex" property="sex"/>
        <result column="writer_avatar" property="avatar"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <resultMap id="unreadNumVO" type="com.zs.vo.CommentVO">
        <id column="id" property="id"/>
        <result column="send_id" property="sendId"/>
        <result column="unread" property="unread"/>
    </resultMap>

    <resultMap id="tbComment" type="com.zs.pojo.TbComment">
        <id column="id" property="id"/>
        <result column="send_id" property="sendId"/>
        <result column="send_avatar" property="sendAvatar"/>
        <result column="receive_id" property="receiveId"/>
        <result column="receive_avatar" property="receiveAvatar"/>
        <result column="content" property="content"/>
        <result column="p_id" property="pId"/>
        <result column="b_id" property="bId"/>
        <result column="reply_time" property="replyTime"/>
        <result column="msg_tag" property="msgTag"/>
        <result column="is_read" property="isRead"/>
        <result column="is_consume" property="isConsume"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="send_visible" property="sendVisible"/>
        <result column="receive_visible" property="receiveVisible"/>
        <result column="exp" property="exp"/>
    </resultMap>

    <resultMap id="articleCommentVO" type="com.zs.vo.ArticleCommentVO">
        <id column="id" property="id"/>
        <result column="send_id" property="sendId"/>
        <result column="receive_id" property="receiveId"/>
        <result column="send_name" property="sendName"/>
        <result column="receive_name" property="receiveName"/>
        <result column="send_avatar" property="sendAvatar"/>
        <result column="receive_avatar" property="receiveAvatar"/>
        <result column="send_sex" property="sendSex"/>
        <result column="receive_sex" property="receiveSex"/>
        <result column="content" property="content"/>
        <result column="p_id" property="pid"/>
        <result column="bid" property="bid"/>
        <result column="msg_tag" property="msgTag"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <sql id="tb_comment_all_column">
        id,send_id,send_avatar,receive_id,content,receive_avatar,p_id,bid,reply_time,
        msg_tag,is_read,is_consume,create_time,update_time,send_visible,receive_visible,exp
    </sql>

    <sql id="articleCommentVO_column">
        w1.writer_avatar send_avatar,w1.writer_name send_name,w1.writer_sex send_sex,
        w2.writer_avatar receive_avatar,w2.writer_name receive_name,w2.writer_sex receive_sex,
        c.id,c.send_id,c.receive_id,c.content,c.p_id,c.bid,c.msg_tag,c.create_time
    </sql>

    <select id="getByReceiveId" parameterType="long" resultMap="commentVO">
        select c.id,c.send_id,c.receive_id,c.msg_tag,c.create_time,w.writer_name,w.writer_sex,w.writer_avatar
        from tb_comment c,tb_writer w
        where c.receive_id = #{receiveId}
        and c.msg_tag = 0
        and c.send_id = w.uid
        and c.receive_visible = 1
        and c.send_visible = 1
        order by c.create_time desc
    </select>

    <select id="getUnreadByReceiveId" parameterType="long" resultMap="unreadNumVO">
        select c.send_id,count(*) unread
        from tb_comment c
        where c.receive_id = #{receiveId} and c.is_read = 0
        group by c.send_id
    </select>

    <select id="getByIds" parameterType="list" resultMap="tbComment">
        select <include refid="tb_comment_all_column"/>
        from tb_comment
        where msg_tag = 0 and id in
        <foreach collection="ids" item="id" open="(" separator=","  close=")">
            #{id}
        </foreach>
    </select>

    <update id="updateStatusByIds">
        update tb_comment set is_read = #{isRead},reply_time=now()
        where id in
        <foreach collection="ids" item="id" open="(" separator=","  close=")">
            #{id}
        </foreach>
    </update>

    <select id="getCommunication" parameterType="long" resultMap="tbComment">
        select <include refid="tb_comment_all_column"/>
        from tb_comment
        where send_id = #{sendId} and receive_id = #{receiveId} and msg_tag = 0;
    </select>

    <select id="getNewUnreadIds" resultMap="unreadNumVO">
        select id from tb_comment where receive_id = #{receiveId} and send_id = #{sendId}
    </select>

    <update id="updateBySendIdAndReceiveId">
        update tb_comment set receive_visible = 0 where receive_id = #{receiveId} and send_id = #{sendId}
    </update>

    <select id="pageRootComments" resultMap="articleCommentVO">
        select <include refid="articleCommentVO_column"/>
        from tb_comment c,tb_writer w1,tb_writer w2
        where c.bid = #{bid} and c.p_id = -1 and c.send_visible = 1 and c.receive_visible = 1
        and w1.uid = c.send_id and w2.uid = c.receive_id
        order by c.create_time desc
    </select>

    <select id="getCommentById" resultMap="articleCommentVO">
        select <include refid="articleCommentVO_column"/>
        from tb_comment c,tb_writer w1,tb_writer w2
        where c.id = #{id} and c.send_visible = 1 and c.receive_visible = 1
        and w1.uid = c.send_id and w2.uid = c.receive_id
    </select>

    <select id="listCommentsByPid" resultMap="articleCommentVO">
        select <include refid="articleCommentVO_column"/>
        from tb_comment c,tb_writer w1,tb_writer w2
        where c.bid = #{bid}
        and c.p_id = #{pid}
        and c.send_visible = 1 and c.receive_visible = 1
        and w1.uid = c.send_id and w2.uid = c.receive_id
        order by c.create_time desc
    </select>

    <insert id="insert" parameterType="com.zs.pojo.TbComment">
        insert into tb_comment values
        (null,#{comment.sendId},null,#{comment.receiveId},#{comment.content},null,#{comment.pId},#{comment.bId},null,#{comment.msgTag},
         0,#{comment.isConsume},now(),now(),1,1,null)
    </insert>
</mapper>